#=====================================================================
#                       LibreChat Configuration                       #
#=====================================================================
# Please refer to the reference documentation for assistance          #
# with configuring your LibreChat environment.                        #
#                                                                     #
# https://www.librechat.ai/docs/configuration/dotenv                  #
#=====================================================================

#==================================================
#               Server Configuration               #
#==================================================

HOST=
PORT=

MONGO_URI_BACKUP=
MONGO_URI=mongodb+srv://yemi:623F3emRA6QglqI5@cluster0.tll0mza.mongodb.net/LibreChat?retryWrites=true&w=majority&appName=

DOMAIN_CLIENT=
DOMAIN_SERVER=

NO_INDEX=
# Use the address that is at most n number of hops away from the Express application.
# req.socket.remoteAddress is the first hop, and the rest are looked for in the X-Forwarded-For header from right to left.
# A value of 0 means that the first untrusted address would be req.socket.remoteAddress, i.e. there is no reverse proxy.
# Defaulted to 1.
TRUST_PROXY=

#===============
# JSON Logging  #
#===============

# Use when process console logs in cloud deployment like GCP/AWS
CONSOLE_JSON=

#===============
# Debug Logging #
#===============

DEBUG_LOGGING=
DEBUG_CONSOLE=

#=============
# Permissions #
#=============

# UID=
# GID=

#===============
# Configuration #
#===============
# Use an absolute path, a relative path, or a URL

# CONFIG_PATH=

#===================================================
#                     Endpoints                     #
#===================================================

# ENDPOINTS=

PROXY=

#===================================
# Known Endpoints - librechat.yaml  #
#===================================
# https://www.librechat.ai/docs/configuration/librechat_yaml/ai_endpoints

# ANYSCALE_API_KEY=
# APIPIE_API_KEY=
# COHERE_API_KEY=
# DEEPSEEK_API_KEY=
# DATABRICKS_API_KEY=
# FIREWORKS_API_KEY=
# GROQ_API_KEY=
# HUGGINGFACE_TOKEN=
# MISTRAL_API_KEY=
# OPENROUTER_KEY=
# PERPLEXITY_API_KEY=
# SHUTTLEAI_API_KEY=
# TOGETHERAI_API_KEY=
# UNIFY_API_KEY=
# XAI_API_KEY=

#============
# Anthropic  #
#============

ANTHROPIC_API_KEY=
# ANTHROPIC_MODELS=
# ANTHROPIC_REVERSE_PROXY=

#============
# Azure      #
#============

# Note: these variables are DEPRECATED
# Use the `librechat.yaml` configuration for `azureOpenAI` instead
# You may also continue to use them if you opt out of using the `librechat.yaml` configuration

# AZURE_OPENAI_DEFAULT_MODEL=
# AZURE_OPENAI_MODELS=
# AZURE_USE_MODEL_AS_DEPLOYMENT_NAME=
# AZURE_API_KEY=
# AZURE_OPENAI_API_INSTANCE_NAME=
# AZURE_OPENAI_API_DEPLOYMENT_NAME=
# AZURE_OPENAI_API_VERSION=
# AZURE_OPENAI_API_COMPLETIONS_DEPLOYMENT_NAME=
# AZURE_OPENAI_API_EMBEDDINGS_DEPLOYMENT_NAME=
# PLUGINS_USE_AZURE=

#=================
#   AWS Bedrock   #
#=================

# BEDROCK_AWS_DEFAULT_REGION=
# BEDROCK_AWS_ACCESS_KEY_ID=
# BEDROCK_AWS_SECRET_ACCESS_KEY=
# BEDROCK_AWS_SESSION_TOKEN=

# Note: This example list is not meant to be exhaustive. If omitted, all known, supported model IDs will be included for you.
# BEDROCK_AWS_MODELS=

# See all Bedrock model IDs here: https://docs.aws.amazon.com/bedrock/latest/userguide/model-ids.html#model-ids-arns

# Notes on specific models:
# The following models are not support due to not supporting streaming:
# ai21.j2-mid-v1

# The following models are not support due to not supporting conversation history:
# ai21.j2-ultra-v1, cohere.command-text-v14, cohere.command-light-text-v14

#============
# Google     #
#============

GOOGLE_KEY=

# GOOGLE_REVERSE_PROXY=
# Some reverse proxies do not support the X-goog-api-key header, uncomment to pass the API key in Authorization header instead.
# GOOGLE_AUTH_HEADER=

# Gemini API (AI Studio)
# GOOGLE_MODELS=

# Vertex AI
# GOOGLE_MODELS=

# GOOGLE_TITLE_MODEL=

# GOOGLE_LOC=

# Google Safety Settings
# NOTE: These settings apply to both Vertex AI and Gemini API (AI Studio)
#
# For Vertex AI:
# To use the BLOCK_NONE setting, you need either:
# (a) Access through an allowlist via your Google account team, or
# (b) Switch to monthly invoiced billing: https://cloud.google.com/billing/docs/how-to/invoiced-billing
#
# For Gemini API (AI Studio):
# BLOCK_NONE is available by default, no special account requirements.
#
# Available options: BLOCK_NONE, BLOCK_ONLY_HIGH, BLOCK_MEDIUM_AND_ABOVE, BLOCK_LOW_AND_ABOVE
#
# GOOGLE_SAFETY_SEXUALLY_EXPLICIT=
# GOOGLE_SAFETY_HATE_SPEECH=
# GOOGLE_SAFETY_HARASSMENT=
# GOOGLE_SAFETY_DANGEROUS_CONTENT=
# GOOGLE_SAFETY_CIVIC_INTEGRITY=

#============
# OpenAI     #
#============

OPENAI_API_KEY=
# OPENAI_MODELS=

DEBUG_OPENAI=

# TITLE_CONVO=
# OPENAI_TITLE_MODEL=

# OPENAI_SUMMARIZE=
# OPENAI_SUMMARY_MODEL=

# OPENAI_FORCE_PROMPT=

# OPENAI_REVERSE_PROXY=

# OPENAI_ORGANIZATION=

#====================
#   Assistants API   #
#====================

ASSISTANTS_API_KEY=
# ASSISTANTS_BASE_URL=
# ASSISTANTS_MODELS=

#==========================
#   Azure Assistants API   #
#==========================

# Note: You should map your credentials with custom variables according to your Azure OpenAI Configuration
# The models for Azure Assistants are also determined by your Azure OpenAI configuration.

# More info, including how to enable use of Assistants with Azure here:
# https://www.librechat.ai/docs/configuration/librechat_yaml/ai_endpoints/azure#using-assistants-with-azure

#============
# Plugins    #
#============

# PLUGIN_MODELS=

DEBUG_PLUGINS=

CREDS_KEY=
CREDS_IV=

# Azure AI Search
#-----------------
AZURE_AI_SEARCH_SERVICE_ENDPOINT=
AZURE_AI_SEARCH_INDEX_NAME=
AZURE_AI_SEARCH_API_KEY=

AZURE_AI_SEARCH_API_VERSION=
AZURE_AI_SEARCH_SEARCH_OPTION_QUERY_TYPE=
AZURE_AI_SEARCH_SEARCH_OPTION_TOP=
AZURE_AI_SEARCH_SEARCH_OPTION_SELECT=

# OpenAI Image Tools Customization
#----------------
# IMAGE_GEN_OAI_DESCRIPTION_WITH_FILES=
# IMAGE_GEN_OAI_DESCRIPTION_NO_FILES=
# IMAGE_EDIT_OAI_DESCRIPTION=
# IMAGE_GEN_OAI_PROMPT_DESCRIPTION=
# IMAGE_EDIT_OAI_PROMPT_DESCRIPTION=

# DALL·E
#----------------
# DALLE_API_KEY=
# DALLE3_API_KEY=
# DALLE2_API_KEY=
# DALLE3_SYSTEM_PROMPT=
# DALLE2_SYSTEM_PROMPT=
# DALLE_REVERSE_PROXY=
# DALLE3_BASEURL=
# DALLE2_BASEURL=

# DALL·E (via Azure OpenAI)
# Note: requires some of the variables above to be set
#----------------
# DALLE3_AZURE_API_VERSION=
# DALLE2_AZURE_API_VERSION=

# Flux
#-----------------
FLUX_API_BASE_URL=
# FLUX_API_BASE_URL =

# Get your API key at https://api.us1.bfl.ai/auth/profile
# FLUX_API_KEY=

# Google
#-----------------
GOOGLE_SEARCH_API_KEY=
GOOGLE_CSE_ID=

# YOUTUBE
#-----------------
YOUTUBE_API_KEY=

# SerpAPI
#-----------------
SERPAPI_API_KEY=

# Stable Diffusion
#-----------------
SD_WEBUI_URL=

# Tavily
#-----------------
TAVILY_API_KEY=

# Traversaal
#-----------------
TRAVERSAAL_API_KEY=

# WolframAlpha
#-----------------
WOLFRAM_APP_ID=

# Zapier
#-----------------
ZAPIER_NLA_API_KEY=

#==================================================
#                      Search                      #
#==================================================

SEARCH=
MEILI_NO_ANALYTICS=
MEILI_HOST=
MEILI_MASTER_KEY=

# Optional: Disable indexing, useful in a multi-node setup
# where only one instance should perform an index sync.
# MEILI_NO_SYNC=

#==================================================
#          Speech to Text & Text to Speech         #
#==================================================

STT_API_KEY=
TTS_API_KEY=

#==================================================
#                        RAG                       #
#==================================================
# More info: https://www.librechat.ai/docs/configuration/rag_api

# RAG_OPENAI_BASEURL=
# RAG_OPENAI_API_KEY=
# RAG_USE_FULL_CONTEXT=
# EMBEDDINGS_PROVIDER=
# EMBEDDINGS_MODEL=

#===================================================
#                    User System                    #
#===================================================

#========================
# Moderation             #
#========================

OPENAI_MODERATION=
OPENAI_MODERATION_API_KEY=
# OPENAI_MODERATION_REVERSE_PROXY=

BAN_VIOLATIONS=
BAN_DURATION=
BAN_INTERVAL=

LOGIN_VIOLATION_SCORE=
REGISTRATION_VIOLATION_SCORE=
CONCURRENT_VIOLATION_SCORE=
MESSAGE_VIOLATION_SCORE=
NON_BROWSER_VIOLATION_SCORE=
TTS_VIOLATION_SCORE=
STT_VIOLATION_SCORE=
FORK_VIOLATION_SCORE=
IMPORT_VIOLATION_SCORE=
FILE_UPLOAD_VIOLATION_SCORE=

LOGIN_MAX=
LOGIN_WINDOW=
REGISTER_MAX=
REGISTER_WINDOW=

LIMIT_CONCURRENT_MESSAGES=
CONCURRENT_MESSAGE_MAX=

LIMIT_MESSAGE_IP=
MESSAGE_IP_MAX=
MESSAGE_IP_WINDOW=

LIMIT_MESSAGE_USER=
MESSAGE_USER_MAX=
MESSAGE_USER_WINDOW=

ILLEGAL_MODEL_REQ_SCORE=

#========================
# Balance                #
#========================

# CHECK_BALANCE=
# START_BALANCE=

#========================
# Registration and Login #
#========================

ALLOW_EMAIL_LOGIN=
ALLOW_REGISTRATION=
ALLOW_SOCIAL_LOGIN=
ALLOW_SOCIAL_REGISTRATION=
ALLOW_PASSWORD_RESET=
# ALLOW_ACCOUNT_DELETION=
ALLOW_UNVERIFIED_EMAIL_LOGIN=

SESSION_EXPIRY=
REFRESH_TOKEN_EXPIRY=

JWT_SECRET=
JWT_REFRESH_SECRET=

# Discord
DISCORD_CLIENT_ID=
DISCORD_CLIENT_SECRET=
DISCORD_CALLBACK_URL=

# Facebook
FACEBOOK_CLIENT_ID=
FACEBOOK_CLIENT_SECRET=
FACEBOOK_CALLBACK_URL=

# GitHub
GITHUB_CLIENT_ID=
GITHUB_CLIENT_SECRET=
GITHUB_CALLBACK_URL=
# GitHub Enterprise
# GITHUB_ENTERPRISE_BASE_URL=
# GITHUB_ENTERPRISE_USER_AGENT=

# Google
GOOGLE_CLIENT_ID=
GOOGLE_CLIENT_SECRET=
GOOGLE_CALLBACK_URL=

# Apple
APPLE_CLIENT_ID=
APPLE_TEAM_ID=
APPLE_KEY_ID=
APPLE_PRIVATE_KEY_PATH=
APPLE_CALLBACK_URL=

# OpenID
OPENID_CLIENT_ID=
OPENID_CLIENT_SECRET=
OPENID_ISSUER=
OPENID_SESSION_SECRET=
OPENID_SCOPE=
OPENID_CALLBACK_URL=
OPENID_REQUIRED_ROLE=
OPENID_REQUIRED_ROLE_TOKEN_KIND=
OPENID_REQUIRED_ROLE_PARAMETER_PATH=
# Set to determine which user info property returned from OpenID Provider to store as the User's username
OPENID_USERNAME_CLAIM=
# Set to determine which user info property returned from OpenID Provider to store as the User's name
OPENID_NAME_CLAIM=

OPENID_BUTTON_LABEL=
OPENID_IMAGE_URL=
# Set to true to automatically redirect to the OpenID provider when a user visits the login page
# This will bypass the login form completely for users, only use this if OpenID is your only authentication method
OPENID_AUTO_REDIRECT=
# Set to true to use PKCE (Proof Key for Code Exchange) for OpenID authentication
OPENID_USE_PKCE=
#Set to true to reuse openid tokens for authentication management instead of using the mongodb session and the custom refresh token.
OPENID_REUSE_TOKENS=
#By default, signing key verification results are cached in order to prevent excessive HTTP requests to the JWKS endpoint.
#If a signing key matching the kid is found, this will be cached and the next time this kid is requested the signing key will be served from the cache.
#Default is true.
OPENID_JWKS_URL_CACHE_ENABLED=
OPENID_JWKS_URL_CACHE_TIME=
#Set to true to trigger token exchange flow to acquire access token for the userinfo endpoint.
OPENID_ON_BEHALF_FLOW_FOR_USERINFO_REQUIRED=
OPENID_ON_BEHALF_FLOW_USERINFO_SCOPE=
# Set to true to use the OpenID Connect end session endpoint for logout
OPENID_USE_END_SESSION_ENDPOINT=


# SAML
# Note: If OpenID is enabled, SAML authentication will be automatically disabled.
SAML_ENTRY_POINT=
SAML_ISSUER=
SAML_CERT=
SAML_CALLBACK_URL=
SAML_SESSION_SECRET=

# Attribute mappings (optional)
SAML_EMAIL_CLAIM=
SAML_USERNAME_CLAIM=
SAML_GIVEN_NAME_CLAIM=
SAML_FAMILY_NAME_CLAIM=
SAML_PICTURE_CLAIM=
SAML_NAME_CLAIM=

# Logint buttion settings (optional)
SAML_BUTTON_LABEL=
SAML_IMAGE_URL=

# Whether the SAML Response should be signed.
# - If "true", the entire `SAML Response` will be signed.
# - If "false" or unset, only the `SAML Assertion` will be signed (default behavior).
# SAML_USE_AUTHN_RESPONSE_SIGNED=


# LDAP
LDAP_URL=
LDAP_BIND_DN=
LDAP_BIND_CREDENTIALS=
LDAP_USER_SEARCH_BASE=
#LDAP_SEARCH_FILTER="mail=
LDAP_CA_CERT_PATH=
# LDAP_TLS_REJECT_UNAUTHORIZED=
# LDAP_STARTTLS=
# LDAP_LOGIN_USES_USERNAME=
# LDAP_ID=
# LDAP_USERNAME=
# LDAP_EMAIL=
# LDAP_FULL_NAME=

#========================
# Email Password Reset   #
#========================

EMAIL_SERVICE=
EMAIL_HOST=
EMAIL_PORT=
EMAIL_ENCRYPTION=
EMAIL_ENCRYPTION_HOSTNAME=
EMAIL_ALLOW_SELFSIGNED=
EMAIL_USERNAME=
EMAIL_PASSWORD=
EMAIL_FROM_NAME=
EMAIL_FROM=

#========================
#      Mailgun API       #
#========================

# MAILGUN_API_KEY=
# MAILGUN_DOMAIN=
# EMAIL_FROM=
# EMAIL_FROM_NAME=

# # Optional: For EU region
# MAILGUN_HOST=

#========================
# Firebase CDN           #
#========================

FIREBASE_API_KEY=
FIREBASE_AUTH_DOMAIN=
FIREBASE_PROJECT_ID=
FIREBASE_STORAGE_BUCKET=
FIREBASE_MESSAGING_SENDER_ID=
FIREBASE_APP_ID=

#========================
# S3 AWS Bucket          #
#========================

AWS_ENDPOINT_URL=
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_REGION=
AWS_BUCKET_NAME=

#========================
# Azure Blob Storage     #
#========================

AZURE_STORAGE_CONNECTION_STRING=
AZURE_STORAGE_PUBLIC_ACCESS=
AZURE_CONTAINER_NAME=

#========================
# Shared Links           #
#========================

ALLOW_SHARED_LINKS=
ALLOW_SHARED_LINKS_PUBLIC=

#==============================
# Static File Cache Control    #
#==============================

# Leave commented out to use defaults: 1 day (86400 seconds) for s-maxage and 2 days (172800 seconds) for max-age
# NODE_ENV must be set to production for these to take effect
# STATIC_CACHE_MAX_AGE=
# STATIC_CACHE_S_MAX_AGE=

# If you have another service in front of your LibreChat doing compression, disable express based compression here
# DISABLE_COMPRESSION=

# If you have gzipped version of uploaded image images in the same folder, this will enable gzip scan and serving of these images
# Note: The images folder will be scanned on startup and a ma kept in memory. Be careful for large number of images.
# ENABLE_IMAGE_OUTPUT_GZIP_SCAN=

#===================================================
#                        UI                         #
#===================================================

APP_TITLE=
# CUSTOM_FOOTER=
HELP_AND_FAQ_URL=

# SHOW_BIRTHDAY_ICON=

# Google tag manager id
#ANALYTICS_GTM_ID=

#===============
# REDIS Options #
#===============

# REDIS_URI=
# USE_REDIS=

# USE_REDIS_CLUSTER=
# REDIS_CA=

#==================================================
#                      Others                      #
#==================================================
#   You should leave the following commented out   #

# NODE_ENV=

# E2E_USER_EMAIL=
# E2E_USER_PASSWORD=

#=====================================================
#                  Cache Headers                      #
#=====================================================
#   Headers that control caching of the index.html    #
#   Default configuration prevents caching to ensure  #
#   users always get the latest version. Customize    #
#   only if you understand caching implications.      #

# INDEX_CACHE_CONTROL=
# INDEX_PRAGMA=
# INDEX_EXPIRES=

# no-cache: Forces validation with server before using cached version
# no-store: Prevents storing the response entirely
# must-revalidate: Prevents using stale content when offline

#=====================================================
#                  OpenWeather                        #
#=====================================================
OPENWEATHER_API_KEY=

#====================================
# LibreChat Code Interpreter API     #
#====================================

# https://code.librechat.ai
# LIBRECHAT_CODE_API_KEY=

#======================
# Web Search           #
#======================

# Note: All of the following variable names can be customized.
# Omit values to allow user to provide them.

# For more information on configuration values, see:
# https://librechat.ai/docs/features/web_search

# Search Provider (Required)
# SERPER_API_KEY=

# Scraper (Required)
# FIRECRAWL_API_KEY=
# Optional: Custom Firecrawl API URL
# FIRECRAWL_API_URL=

# Reranker (Required)
# JINA_API_KEY=
# or
# COHERE_API_KEY=

AZURE_OPENAI_API_KEY=

OPENAI_API_KEY=


# Azure OpenAI Configuration
AZURE_OPENAI_INSTANCE_NAME=
AZURE_RESOURCE_GROUP=
AZURE_DEEPSEEK_BASE_URL=

# Web Search API Keys (if you plan to use web search)
SERPER_API_KEY=
FIRECRAWL_API_KEY=
JINA_API_KEY=